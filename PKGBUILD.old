# Maintainer: Aaron DeVore <aaron.devore@gmail.com>
# Contributor: Cody Maloney <cmaloney@cs.nmt.edu>

pkgname=ganeti
pkgver=2.5.1
pkgrel=1
pkgdesc="Cluster-based virtualization management software"
arch=('any')
url="http://code.google.com/p/ganeti/"
license=('GPL2')
depends=(bridge-utils iproute2 iputils libvirt lvm2 ndisc6 openssh python2 python2-pyopenssl
  python2-pyparsing python2-pyinotify python-pycurl python-paramiko socat start-stop-daemon)
makedepends=(python2-sphinx)
optdepends=(qemu-kvm)
conflicts=(ganeti-htools)
source=(http://$pkgname.googlecode.com/files/$pkgname-$pkgver.tar.gz)
md5sums=('d4151b17a1a32f5241200f613cc72890')

build() {
  cd "$srcdir/$pkgname-$pkgver"

  # Python 2 fixes
  export PYTHON=python2
  sed -i 's_#!/usr/bin/python_#!/usr/bin/python2_' \
  autotools/check-tar autotools/check-news autotools/build-bash-completion daemons/import-export doc/design-2.1.rst \
  doc/html/design-2.1.html doc/html/_sources/design-2.1.txt Makefile.am Makefile.in qa/ganeti-qa.py  \
  test/ganeti.utils.io_unittest.py test/ganeti.opcodes_unittest.py test/ganeti.jqueue_unittest.py \
  test/ganeti.utils.log_unittest.py test/ganeti.utils.mlock_unittest.py test/ganeti.hypervisor.hv_lxc_unittest.py \
  test/ganeti.cli_unittest.py test/ganeti.daemon_unittest.py test/ganeti.rapi.baserlib_unittest.py \
  test/ganeti.utils.text_unittest.py test/ganeti.objects_unittest.py test/tempfile_fork_unittest.py \
  test/ganeti.cmdlib_unittest.py test/ganeti.utils.algo_unittest.py test/ganeti.serializer_unittest.py \
  test/ganeti.hypervisor_unittest.py test/ganeti.luxi_unittest.py test/ganeti.utils.nodesetup_unittest.py \
  test/ganeti.ssh_unittest.py test/ganeti.hooks_unittest.py test/ganeti.client.gnt_instance_unittest.py \
  test/ganeti.utils.x509_unittest.py test/ganeti.query_unittest.py test/ganeti.hypervisor.hv_fake_unittest.py \
  test/cfgupgrade_unittest.py test/ganeti.netutils_unittest.py test/ganeti.uidpool_unittest.py \
  test/ganeti.hypervisor.hv_chroot_unittest.py test/ganeti.http_unittest.py test/ganeti.runtime_unittest.py \
  test/ganeti.hypervisor.hv_kvm_unittest.py test/ganeti.config_unittest.py test/ganeti.rapi.rlib2_unittest.py \
  test/ganeti.rpc_unittest.py test/ganeti.mcpu_unittest.py test/ganeti.rapi.resources_unittest.py \
  test/ganeti.rapi.client_unittest.py test/ganeti.utils.retry_unittest.py test/ganeti.errors_unittest.py \
  test/ganeti.constants_unittest.py test/ganeti.workerpool_unittest.py test/ganeti.impexpd_unittest.py \
  test/ganeti.ht_unittest.py test/docs_unittest.py test/ganeti.utils_unittest.py test/ganeti.locking_unittest.py \
  test/ganeti.asyncnotifier_unittest.py test/import-export_unittest-helper test/ganeti.masterd.instance_unittest.py \
  test/ganeti.utils.hash_unittest.py test/ganeti.backend_unittest.py test/ganeti.bdev_unittest.py \
  test/ganeti.utils.process_unittest.py test/ganeti.utils.wrapper_unittest.py test/ganeti.hypervisor.hv_xen_unittest.py \
  test/ganeti.confd.client_unittest.py test/ganeti.utils.filelock_unittest.py test/ganeti.qlang_unittest.py \
  test/ganeti.compat_unittest.py tools/cluster-merge tools/sanitize-config tools/cfgupgrade12 tools/ganeti-listrunner \
  tools/setup-ssh tools/lvmstrap tools/cfgshell tools/burnin tools/move-instance tools/check-cert-expired \
  tools/cfgupgrade

  # eliminate the simplejson dependency
  # When version bumping, check that there wasn't an effort by
  # upstream to do the same thing.
  sed -i 's/import simplejson/import json as simplejson/' configure \
    lib/serializer.py lib/client/gnt_instance.py lib/client/gnt_debug.py \
    lib/rapi/client.py lib/serializer.py

  # Needs python2-sphinx because sphinx executes some Python 2 code
  # while building documentation
  SPHINX=/usr/bin/sphinx-build2 ./configure \
      --prefix=/usr \
      --localstatedir=/var \
      --sysconfdir=/etc \
      --docdir=/usr/share/doc/ganeti \
      --disable-htools
      # ./configure automatically includes htools if GHC and the
      # necessary packages are available. Explicitly skip htools. Use
      # ganeti-htools if you want htools.
  make
}

check() {
  cd "$srcdir/$pkgname-$pkgver"
  # Disable a faulty test
  sed -i 's/testNoReset/disabled_testNoReset/' test/tempfile_fork_unittest.py
  make -k check
}

package() {
  cd "$srcdir/ganeti-$pkgver"
  _docdir="$pkgdir/usr/share/doc/ganeti"
  make DESTDIR="$pkgdir" install
  install -D -m 0644 doc/examples/bash_completion \
	  "$pkgdir/etc/bash_completion.d/ganeti"
  # Various required directories
  mkdir -p "$pkgdir/etc/ganeti" "$pkgdir/srv/ganeti/"{os,export}
  mkdir -p "$_docdir"
  cp -a doc/html "$_docdir"
  cp -a doc/api "$_docdir"
  # TODO: An rc.d script based on doc/examples/ganeti.initd?
}

# vim:set ts=2 sw=2 et:

